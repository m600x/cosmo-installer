---
- name: Check which user to be for SSH
  hosts: all
  gather_facts: false



  pre_tasks:
    - name: Set credentials with default cosmo:cosmo
      set_fact:
        ansible_ssh_user: 'cosmo'
        ansible_ssh_pass: 'cosmo'

  tasks:
    - name: Test SSH connection using default value
      ping:
      ignore_unreachable: true
      ignore_errors: true
      changed_when: false
      register: ssh_test
    
    - name: Reset connection status
      meta: clear_host_errors

    - name: Fall back to custom user defined, default account appear to be missing
      block:
        - name: Fail if new_user_name is undefined
          fail:
            msg: "The variable new_user_name is undefined, cannot continue"
          when: new_user_name is undefined

        - name: Fail if new_user_password is undefined
          fail:
            msg: "The variable new_user_password is undefined, cannot continue"
          when: new_user_password is undefined

        - name: Set custom user/password from variable
          set_fact:
            ansible_ssh_user: "{{ new_user_name }}"
            ansible_ssh_pass: "{{ new_user_password }}"
      when: ssh_test.unreachable is defined

- name: Check which root password is correct
  hosts: all
  gather_facts: false

  pre_tasks:
    - name: Set sudo password with default value cosmo
      set_fact:
        ansible_sudo_pass: 'cosmo'

  tasks:
    - name: Test root password using default value
      command: echo "sudo password correct"
      ignore_errors: true
      changed_when: false
      register: root_test
      become: true

    - name: Reset connection status
      meta: clear_host_errors

    - name: Change root password with new value
      block:
        - name: Fail if new_root_password is undefined
          fail:
            msg: "The variable new_root_password is undefined, cannot continue"
          when: new_root_password is undefined
        - name: Set custom user/password from variable
          set_fact:
            ansible_sudo_pass: "{{ new_root_password }}"
      when: root_test.failed