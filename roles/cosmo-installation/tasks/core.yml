---
- name: CORE - Update installed packages
  apt:
    update_cache: yes
    upgrade: full
  become: true

- name: CORE - Install basic packages
  apt:
    name: "{{ system_packages }}"
    state: present
  become: true

- name: CORE - Change hostname
  hostname:
    name: "{{ new_hostname }}"
    use: systemd
  become: true

- name: CORE - Set correct timezone
  timezone:
    name: "{{ tz }}"
  become: true

- name: CORE - Ensure locale exists
  locale_gen:
    name: "{{ locale }}.UTF-8"
    state: present
  become: true

- name: CORE - Root password
  block:
    - name: CORE - Change root password
      user:
        name: root
        password: "{{ new_root_password | password_hash('sha512') }}"
        update_password: always
      become: true
      changed_when: false
    - name: CORE - Set sudo password with new value
      set_fact:
        ansible_sudo_pass: "{{ new_root_password }}"
  when: new_root_password is defined

- name: CORE - New user
  block:
    - name: CORE - Add new user
      user:
        name: "{{ new_user_name }}"
        password: "{{ new_user_pass | password_hash('sha512') }}"
        update_password: always
        shell: /bin/zsh
        groups: cosmo,sudo,audio,video,input,aid_system,aid_graphics,aid_input,aid_audio,aid_net_bt_admin,aid_net_bt,aid_inet,aid_net_raw,aid_net_admin
        create_home: true
        home: "/home/{{ new_user_name }}"
        state: present
      become: true
      changed_when: false
    - name: CORE - Allow passwordless sudo for new user
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: "^{{ new_user_name }} ALL="
        line: "{{ new_user_name }} ALL=(ALL) NOPASSWD:ALL"
        validate: '/usr/sbin/visudo -cf %s'
      become: true
    - name: CORE - NetworkManager register settings
      find:
        paths: /etc/NetworkManager/system-connections/
        file_type: file
        recurse: Yes
      register: network_conf
    - name: CORE - NetworkManager let new user use theses settings
      lineinfile:
        path: "{{ item.path }}"
        regexp: "^permissions=user:"
        line: "permissions=user:cosmo:{{ new_user_name }}:;"
      with_items: "{{ network_conf.files | flatten(levels=1) }}"
      become: true
    - name: CORE - Change active SSH user
      set_fact:
        ansible_ssh_user: "{{ new_user_name }}"
        ansible_ssh_pass: "{{ new_user_pass }}"
    - name: CORE - Delete default user cosmo
      user:
        name: cosmo
        state: absent
        remove: yes
        force: yes
      become: true
  when: new_user_name is defined and new_user_pass is defined

- name: Check if .profile file exist
  stat:
    path: "/home/{{ ansible_ssh_user }}/.profile"
  register: profile

- name: Create .profile
  file:
    path: "/home/{{ ansible_ssh_user }}/.profile"
    state: touch
  when: not profile.stat.exists

- name: CORE - Add .profile template to correct keyboard layout
  lineinfile:
    path: "/home/{{ ansible_ssh_user }}/.profile"
    state: present
    regexp: "^/usr/bin/setxkbmapsetxkbmap"
    line: "/usr/bin/setxkbmap -model planetcosmo -layout {{ cosmo_keyboard_layout }}"
  become: true

- name: CORE - MicroSD
  block:
    - name: CORE - Create microSD mount point
      file:
        path: /media/sdcard
        state: directory
        owner: root
        group: root
        mode: 0777
      become: true
    - name: CORE - Create microSD mount point symlink in user directory
      file:
        src: /media/sdcard
        dest: "/home/{{ ansible_ssh_user }}/sdcard"
        owner: root
        group: root
        state: link
      become: true
    - name: CORE - Retrieve microSD UUID
      shell: blkid | grep mmcblk1p1 | awk '{print $4}' | grep -Po '(?<=UUID=).*' | tr -d '"'
      register: sd_uuid
      changed_when: false
      become: true
    - name: CORE - Retrieve microSD format
      shell: blkid | grep mmcblk1p1 | awk '{print $5}' | grep -Po '(?<=TYPE=).*' | tr -d '"'
      register: sd_format
      changed_when: false
      become: true
    - name: CORE - Mount microSD
      mount:
        path: /media/sdcard
        src: "UUID={{ sd_uuid.stdout }}"
        fstype: "{{ sd_format.stdout }}" 
        opts: user,fmask=0111,dmask=0000
        state: present
      become: true

- name: CORE - Replace evdev driver with mtrack for relative touchscreen movement
  copy:
    src: "{{ item }}"
    dest: "/usr/share/X11/xorg.conf.d/{{ item | basename }}"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: '0644'
  with_items:
    - "common/10-evdev.conf"
    - "common/50-mtrack.conf"
  become: true
  when: touch_relative

- name: CORE - Right click
  block:
    - name: Get cosmo-rightclick
      git:
        repo: https://github.com/m600x/cosmo-rightclick.git
        dest: "/home/{{ ansible_ssh_user }}/cosmo-rightclick"
        clone: yes
        update: yes
    - name: Build cosmo-rightclick
      make:
        chdir: "/home/{{ ansible_ssh_user }}/cosmo-rightclick"
        target: all
    - name: Move binary to /usr/local/bin/cosmo-rightclick
      copy:
        src: "/home/{{ ansible_ssh_user }}/cosmo-rightclick/out/cosmo-rightclick"
        dest: "/usr/local/bin/cosmo-rightclick"
        owner: root
        group: root
        mode: '0755'
        remote_src: yes
      become: true
    - name: Add cosmo-rightclick service
      template:
        src: rightclick_service.j2
        dest: "/etc/systemd/system/rightclick.service"
        owner: root
        group: root
        mode: '0755'
      become: true
    - name: Enable and start cosmo-rightclick service
      systemd:
        name: rightclick
        enabled: yes
      become: true
  when: touch_rightclick